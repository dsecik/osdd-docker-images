user  openresty;
worker_processes  1;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid  /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /usr/local/openresty/nginx/conf/mime.types;
    default_type  application/octet-stream;
    
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log  logs/access.log  main;
    
    #include /etc/nginx/conf.d/*.conf;
    
    proxy_cache_path /nginx_cache levels=1:2 keys_zone=kramerius_proxy_cache:10m max_size=1g  inactive=60m use_temp_path=off;
    
    map $http_x_forwarded_proto $fastcgi_https {
        default $https;
        http '';
        https on;
    }
    
    server {
        return 404;
    }
    
    server {
        listen 80;
        server_name imageserver.mzk.cz;
        root /var/www/imageserver/;
        
        add_header Access-Control-Allow-Origin *;
        
        real_ip_header X-Forwarded-For;
        set_real_ip_from 172.18.0.0/16;
        
        
        #IIPImage
        location ~ iipsrv\.fcgi$ {            
            access_by_lua_block {
                function table.contains_value(table, element)
                    for _, value in pairs(table) do
                        if value == element then
                            return true
                        end
                    end
                    return false
                end
                
                function string.starts_with(String,Start)
                    return string.sub(String,1,string.len(Start))==Start
                end
                
                local ip_white_list = {"195.113.155.102","195.113.155.148","195.113.145.2","193.58.7.146","195.113.6.47","147.231.63.54"}
                
                -- 172.18.0.0/16 docker ud_bridge network (kramerius.mzk.cz)
                if not (table.contains_value(ip_white_list, ngx.var.remote_addr) or string.starts_with(ngx.var.remote_addr, "172.18.")) then
                    
                    local arguments = ""
                  
                    if ngx.var.args then
                        arguments = ngx.var.args
                    end
                    
                    -- deny acces to NDK images
                    local is_ndk = string.match(arguments, "=/NDK/")
                    if is_ndk then
                        ngx.exit(ngx.HTTP_FORBIDDEN)
                    end
                    
                    local uuid = string.match(arguments, "%x%x%x%x%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%x%x%x%x%x%x%x%x")
                    
                    if uuid then
                        local cjson = require "cjson"
                        local res = ngx.location.capture("/kramerius_proxy",{args={id=uuid}})
                        
                        if res.status == 200 then
                            local res_decoded = cjson.decode(res.body)
                            local policy = res_decoded.policy
                            
                            if policy == "private" then
                                ngx.exit(ngx.HTTP_FORBIDDEN)
                            end
                        end
                    end
                end
            }
            
            include fastcgi_params;
            fastcgi_param HTTPS $fastcgi_https if_not_empty;
            resolver 127.0.0.11;
            set $upstream_endpoint iipimage.imageserver.mzk.cz:9000;
            fastcgi_pass $upstream_endpoint;
            fastcgi_intercept_errors on;
        }
        
        location /download/ {
            alias /var/www/imageserver/data/;
            allow 172.18.0.0/16;
            deny all;
            try_files $uri $uri.jp2 =404;
        }
        
        location ~ \.jp2$ {
            rewrite ^(.*)\.jp2$ $1 redirect;
        }
        
        location /data {
            allow 195.113.155.102;
            deny all;
            autoindex on;
        }
        
        location /kramerius_proxy {
            proxy_cache kramerius_proxy_cache;
            proxy_read_timeout 10s;
            proxy_connect_timeout 10s;
            proxy_cache_valid 200 10m;
            proxy_cache_valid any 2m;
            
            #resolver 8.8.8.8;
            resolver 127.0.0.11;
            proxy_pass http://kramerius.mzk.cz/search/api/v5.0/item/uuid:$arg_id;
        }
        
        location / {
            #MZK predefined suffixes
            rewrite ^([a-zA-Z0-9_\/\.\-]*)\/preview.jpg$ /iipsrv.fcgi?iiif=$1.jp2/full/,128/0/native.jpg last;
            rewrite ^([a-zA-Z0-9_\/\.\-]*)\/thumb.jpg$ /iipsrv.fcgi?iiif=$1.jp2/full/,256/0/native.jpg last;
            rewrite ^([a-zA-Z0-9_\/\.\-]*)\/large.jpg$ /iipsrv.fcgi?iiif=$1.jp2/full/500,/0/native.jpg last;
            rewrite ^([a-zA-Z0-9_\/\.\-]*)\/big.jpg$ /iipsrv.fcgi?iiif=$1.jp2/full/1500,/0/native.jpg last;
            rewrite ^([a-zA-Z0-9_\/\.\-]*)\/thumb_for_maps.jpg$ /iipsrv.fcgi?FIF=$1.jp2&wid=210&hei=165&rot=0&cvt=jpeg last;
            
            if ($remote_addr = "195.113.155.102") {
                rewrite ^([a-zA-Z0-9_\/\.\-]*)\/download.jpg$ /iipsrv.fcgi?iiif=$1.jp2/full/full/0/native.jpg last;
            }
            
            #Zoomify
            rewrite ^([a-zA-Z0-9_\/\.\-]*)\/ImageProperties.xml$ /iipsrv.fcgi?Zoomify=$1.jp2/ImageProperties.xml last;
            rewrite ^([a-zA-Z0-9_\/\.\-]*)\/(TileGroup[0-9]*)\/([0-9]*-[0-9]*-[0-9]*\.jpg)$ /iipsrv.fcgi?Zoomify=$1.jp2/$2/$3 last;
            
            #DeepZoom
            rewrite ^([a-zA-Z0-9_\/\.\-]*)\/deepzoom.dzi$ /iipsrv.fcgi?DeepZoom=$1.jp2.dzi last;
            rewrite ^([a-zA-Z0-9_\/\.\-]*)\/deepzoom_files/([0-9]*)/([0-9]+)_([0-9]+).jpg$ /iipsrv.fcgi?DeepZoom=$1.jp2_files/$2/$3_$4.jpg last;
            
            #iiif image request (identifier/region/size/rotation/quality.jpg)
            rewrite ^([a-zA-Z0-9_\/\.\-]*)\/([a-zA-Z0-9\.\,\:]*)/([a-zA-Z0-9\.\,\:\!]*)/([0-9\.\!]*)/([a-zA-Z0-9]*).jpg$ /iipsrv.fcgi?iiif=$1.jp2/$2/$3/$4/$5.jpg last;
            
            #iiif info request (json/xml)
            rewrite ^([a-zA-Z0-9_\/\.\-]*)\/info.json$ /iipsrv.fcgi?iiif=$1.jp2/info.json last;
            rewrite ^([a-zA-Z0-9_\/\.\-]*)\/info.xml$ /iipsrv.fcgi?iiif=$1.jp2/info.xml last;
            
            #download original image
            rewrite ^([a-zA-Z0-9_\/\.\-]*)\/original$ /download/$1 last;
            
            #OpenSeaDragon
            if (-f "$document_root/data$uri.jp2") {
                rewrite ^(.*)$ /reader/reader.html last;
            }
            
            #listing
            if (-d "$document_root/data$uri") {
                rewrite ^(.*\/)?(.*)$ /data$1;
            }
        }
    }
}
